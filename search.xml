<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[javase之方法与属性]]></title>
    <url>%2F2018%2F05%2F09%2Fjavase%E4%B9%8B%E5%B1%9E%E6%80%A7%E4%B8%8E%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[本次分享内容主要包括以下几点· 方法· 方法调用· 方法重载· 属性 方法· java的方法类似于其他语言的函数，方法是个“黑匣子”，是一段用来完成特定功能的代码块，并返回结果。· 方法间允许相互调用· 如果方法具有返回值，方法中必须使用关键字return返回该值，返回类型为该返回值的类型· 如果方法没有返回值，则返回类型为void注意：方法的设计原则—- 一个方法只做一件事 方法的调用方法的调用分两种：1.外部调用：即调用其他类对象的方法时，通过“对象名.方法名（参数列表）”调用 2.内部调用：在类的内部调用时，可以通过“方法名（参数列表）调用”。 方法的重载（Overloading）方法重载的定义：如果有两个方法的方法名相同，但参数不一致，那么可以说一个方法是另一个方法的重载。 需注意java重载方法必须满足条件–“两同三不同”：–同一个类，同一个方法名–不同：参数列表不同（类型，个数，顺序不同） · 方法的返回值类型可以不相同· 方法的修饰符可以不相同· main方法也可以被重载 方法重载的特征：1.在同一个类中定义 2.方法名相同 3.方法的参数列表不同（以上都提到了） 以下实例演示了如何重载MyClass类的info方法class MyClass { int height; MyClass() { System.out.println(“无参数构造函数”); height = 4; } MyClass(int i) { System.out.println(“房子高度为 “ + i + “ 米”); height = i; } void info() { System.out.println(“房子高度为 “ + height + “ 米”); } void info(String s) { System.out.println(s + “: 房子高度为 “ + height + “ 米”); }}public class MainClass { public static void main(String[] args) { MyClass t = new MyClass(3); t.info(); t.info(“重载方法”); //重载构造函数 new MyClass(); }}以上代码运行输出结果是：房子高度为 3 米房子高度为 3 米重载方法: 房子高度为 3 米无参数构造函数 属性属性的设置原则：属性不可分属性指事物具有的特性，例如，人的身高，体重等都是属性 属性可以分为类属性和实例属性两种： （1），定义属性的时候没有static修饰的就是实例属性，实例属性从该类的实例被创建起开始存在，直到系统完全销毁这个实例，实例变量的作用域与对应实例的生存范围相同。 在程序中访问实例属性语法：实例.实例属性 （2），定义属性的时候有static修饰的就是类属性，类属性从该类的准备阶段起开始存在，直到系统完全销毁这个类，类属性的作用域与这个类的生存范围相同。 在程序中访问类属性语法：类.类属性。虽然也可以通过实例来访问static类属性，但是为了程序的可读性和明确性不建议这么使用。 属性在没有赋初值时系统会自动帮我们做初始化： 整型数据初始化为0，布尔型数据初始化为 false，对象类型初始化为 null。 实例变量的作用域在本类中完全有效，当被其他的类调用的时候也可能有效。 属性的初始化和内存中的运行机制—-（未完待续…）]]></content>
      <categories>
        <category>java学习</category>
      </categories>
      <tags>
        <tag>javase</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2018%2F05%2F06%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Chasing my dream with wonderful sunshine is the happiest for me in a day！]]></content>
      <tags>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[postName]]></title>
    <url>%2F2018%2F05%2F06%2FpostName%2F</url>
    <content type="text"><![CDATA[MM626399………….]]></content>
  </entry>
</search>
